# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Workflow

on:
  push:
    branches:
      - master

  pull_request:

jobs:
  # test job
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: tools
          POSTGRES_DB: tools
          POSTGRES_PASSWORD: tools
        ports: ["5432:5432"]

    steps:
    - uses: actions/checkout@v2
    
    # install ruby
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7.1
 
    # install node
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: 10.13.0

    # install ruby deps
    - name: Install dependencies
      run: bundle install --jobs 4 --retry 3
    
    # install node deps
    - name: Install packages
      run: yarn install --pure-lockfile

    # setup database
    - name: Setup test database and precompile assets
      env:
        RAILS_ENV: test
        PGHOST: localhost
        PGUSER: tools
      run: bundle exec rails db:setup
      
    # run tests
    - name: Run tests
      env:
        CI_SECRET: 51b283af668dcbafb44bbd4d085b0419aa0f6ec9a9bdba38a6890cb82dcaeea8bac1fd31503bd8b61c783cf61cd601e3e1a01ba810b63195cc8d8008e4accf27
      run: bundle exec rspec

  # build docker and push to registry
  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
      
      - name: Build docker image
        run: docker build -t ${GITHUB_REPOSITORY}:${GITHUB_SHA} .

      - name: Log into docker registry
        run: docker login -u ozkar99 -p ${{ secrets.DOCKER_REGISTRY_ACCESS_TOKEN }}

      - name: Push image
        run: docker push ${GITHUB_REPOSITORY}:${GITHUB_SHA}

  # run deploy webhook
  deploy:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Run webhook
        run: curl -u deploy:${{ secrets.WEBHOOK_PASSWORD }} -X POST http://tools.ozkar.org:9095/deploy?ref=$GITHUB_SHA
